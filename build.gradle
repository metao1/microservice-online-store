plugins {
  id "base"
  id "idea"
  id "org.flywaydb.flyway" version "10.11.0" apply false
  id "com.google.cloud.tools.jib" version "3.1.4" apply false
  id "org.springframework.boot" version "3.4.5"
  id "io.spring.dependency-management" version "1.1.6" apply false
  id "com.google.protobuf" version "0.9.4" apply false
}

ext {
  micrometerVersion = "1.12.3"
  testcontainersVersion = "1.20.6"
}

subprojects {
  group "com.metao.book"
  apply plugin: "java"
  apply plugin: "com.google.protobuf"
  apply plugin: "io.spring.dependency-management"

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
  }
  boolean isSpringProject = gradle.springBootProjects.contains(it.path)
  if (isSpringProject) {
    apply plugin: "org.springframework.boot"
    apply plugin: "com.google.protobuf"
    apply plugin: "org.flywaydb.flyway"
    dependencies {
      implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
      }
      implementation "org.springframework.boot:spring-boot-autoconfigure"
      implementation "commons-codec:commons-codec:1.17.1"      

      testImplementation "org.springframework.boot:spring-boot-starter-test"
    }
  }
  
  dependencies {

    // GRPC
    implementation "io.grpc:grpc-protobuf:1.70.0"
    implementation "io.grpc:grpc-stub:1.70.0"
    runtimeOnly "io.grpc:grpc-netty-shaded:1.70.0"

    // Jackson - Let Spring Boot manage the version

    // Test
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    testImplementation "org.assertj:assertj-core:3.22.0"
    testImplementation "org.awaitility:awaitility:4.3.0"
    testImplementation "org.mockito:mockito-core:4.8.0"

    // Lombok
    implementation "org.projectlombok:lombok:1.18.36"
    annotationProcessor "org.projectlombok:lombok:1.18.36"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.36"

    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:postgresql:1.17.6"
    testImplementation "org.testcontainers:testcontainers"

    testImplementation platform("org.testcontainers:testcontainers-bom:${testcontainersVersion}")

    implementation "org.springframework.boot:spring-boot-starter-test"

  }

  configurations.configureEach {
    test {
      useJUnitPlatform()

      doFirst {
        systemProperty "spring.profiles.active", "test"
      }

      testLogging {
        events "PASSED", "SKIPPED", "FAILED"
      }
    }

    exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    exclude group: "org.slf4j", module: "slf4j-simple"
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "org.junit.vintage:junit-vintage-engine"    
    dependencyManagement {
      imports {
        mavenBom "io.micrometer:micrometer-bom:$micrometerVersion"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
      }
    }
  }
  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(21)
    }
  }
}

tasks.register('buildDependencies') {
  dependsOn ':shared-kernel:publishAllPublicationsToLocalRepository'
  dependsOn ':kafka-lib:publishAllPublicationsToLocalRepository'
  dependsOn ':shared-test:publishAllPublicationsToLocalRepository'
  dependsOn ':inventory-microservice:build'
  dependsOn ':payment-microservice:build'
  dependsOn ':order-microservice:build'
  dependsOn ':payment-microservice:build'
}


tasks.named('build') {
  dependsOn ':buildDependencies'
  dependsOn ':shared-kernel:build'
  dependsOn ':shared-test:build'
}
