dependencies {
  implementation "com.metao.book.shared:shared-kernel:1.0"
  implementation "com.metao.kafka:kafka-lib:1.0"

  implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  implementation "org.springframework.boot:spring-boot-starter-validation"

  implementation "org.springframework.kafka:spring-kafka"
  implementation "org.apache.kafka:kafka-clients:4.0.0"
  implementation "org.postgresql:postgresql:42.7.3"
  runtimeOnly "org.postgresql:postgresql:42.7.3"

  implementation "io.confluent:kafka-protobuf-serializer:7.8.0"
  implementation "io.confluent:kafka-streams-protobuf-serde:7.8.0"

  implementation "org.flywaydb:flyway-database-postgresql:10.11.0"
  implementation "org.springframework.boot:spring-boot-starter-actuator"

  implementation "org.flywaydb:flyway-core"

  // cache
  implementation "org.hibernate:hibernate-core-jakarta:5.6.12.Final"
  implementation "org.hibernate:hibernate-ehcache:5.6.12.Final"
  //implementation "org.ehcache:ehcache:3.10.8"

  implementation "io.grpc:grpc-protobuf:1.70.0"
  implementation "io.grpc:grpc-stub:1.70.0"

  testImplementation "org.mockito:mockito-core:4.8.0"
  testImplementation "io.rest-assured:rest-assured:5.4.0"
  testImplementation "com.metao.book.shared:shared-test:1.0"
}

protobuf {
  protoc {
    if (osdetector.os == "osx") {
      artifact = 'com.google.protobuf:protoc:3.25.5:osx-x86_64'
    } else {
      artifact = 'com.google.protobuf:protoc:3.25.5'
    }
  }

  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.70.0'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

tasks.named('build') {
  dependsOn ':shared-kernel:publishAllPublicationsToLocalRepository'
  dependsOn ':shared-test:publishAllPublicationsToLocalRepository'
  dependsOn 'generateProto'
}
