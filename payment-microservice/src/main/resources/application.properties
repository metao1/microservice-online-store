spring.application.name=payment-microservice
server.port=8084

spring.kafka.bootstrap-servers=localhost:9092
   
# Consumer for OrderCreatedEvent
spring.kafka.consumer.group-id=payment-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
spring.kafka.consumer.properties.specific.protobuf.value.type=com.metao.book.order.OrderCreatedEvent 
# spring.kafka.consumer.properties.schema.registry.url=http://localhost:8081

# Producer for OrderPaymentEvent
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
# spring.kafka.producer.properties.schema.registry.url=http://localhost:8081
   
# Topic Names
kafka.topic.order-created.name=order-created-events 
kafka.topic.order-payment.name=order-payment-events
